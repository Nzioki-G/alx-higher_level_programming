>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 1], [1, 1], [1, 1]]

# correct input with integers
>>> matrix_divided(matrix, 1)
[[1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]

# correct input with floats
>>> matrix_divided([[2.5, 3.1], [4.7, 5.8]], 9)
[[0.28, 0.34], [0.52, 0.64]]

# correct input with combination of integers and floats
>>> matrix_divided([[2.5, 3.1], [47, 58]], 9)
[[0.28, 0.34], [5.22, 6.44]]

# different row sizes
>>> matrix_divided([[1],[1, 1],[1, 1]], 1)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

# matrix with non-numeric element
>>> matrix_divided([[1, 1],[1, 1],[1, '1']], 1)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# non-numeric div type
>>> matrix_divided(matrix, '1')
Traceback (most recent call last):
  ...
TypeError: div must be a number

# non-list type of matrix
>>> matrix_divided([1, 1, 1, 1, 1, 1], 1)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# division by zero
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

# empty matrix
>>> matrix_divided([[]], 2)
[[]]

# null matrix
>>> matrix_divided(None, 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix, -2)
[[-0.5, -0.5], [-0.5, -0.5], [-0.5, -0.5]]

# div is infinity
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]]

# div is -inf
>>> matrix_divided(matrix, float('-inf'))
[[-0.0, -0.0], [-0.0, -0.0], [-0.0, -0.0]]
